# UNIXでは一般ユーザが80/443ポートで待ち受けできない
# root権限で起動した後に80/443ポートで待ち受け、setuid(2)を使って権限降格して処理する方法もある
# Goではsetuid(2)の使用を推奨していない
# setuid(2)はカレントスレッドに対してのみ適用される
# 各スレッドと協調する必要がありますが、Goではそのスレッド間で権限の協調するための仕組みが実装されていない
# このようにupstartでバックグラウンドでプロセスとして起動させてnginxなどでリバースプロキシさせる

description "Golang Web App"

author "uh-zz"

start on (net-device-up and local-filesystems and runlevel [2345])

stop on runlevel [016]

respawn

console log
setuid uh-zz

chdir /home/uh-zz/dev/go-http

exec /home/uh-zz/dev/go-http/go-http
